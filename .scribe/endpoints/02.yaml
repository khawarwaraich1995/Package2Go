name: 'Driver Authentication'
description: |-

  API endpoints for managing drivers authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/driver/register
    metadata:
      title: 'Register Endpoint'
      description: |-
        This endpoint allows you to register driver and generate token for authentication.
        Along token driver details will be displayed. To call authorized endpoints you need access_token generated by this endpoint.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the driver.'
        required: true
        example: 'Lucy Mark'
        type: string
      email:
        name: email
        description: 'The valid email of the driver.'
        required: true
        example: lucy@example.com
        type: email
      password:
        name: password
        description: 'The password of the driver.'
        required: true
        example: secret
        type: string
    responses:
      -
        status: 200
        content: |-
          {
               "status": true,
               "data": {
                   "name": "Lucy",
                   "email": "lucy@gmail.com",
                   "id": 2
               },
               "access_token": "14|wiazS1DtHNXIWDToygChQD84uqU9HwVaU10nWVia",
               "token_type": "Bearer"
           }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/driver/logout
    metadata:
      title: 'Logout Endpoint'
      description: |-
        This endpoint allows you to remove driver token generated for authentication to logout user.
        To logout token must be required in header otherwise driver will be Unauthenticated.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $token'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "status": true,
                 "message": "You have successfully logged out!"
           }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
                 "message": "Unauthenticated."
           }
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/driver/login
    metadata:
      title: 'Login Endpoint'
      description: |-
        This endpoint allows you to generate token of driver after authentication.
        Along token driver details will be displayed. To call authorized endpoints you need access_token generated by this endpoint.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The valid email of the driver.'
        required: true
        example: driver@example.com
        type: email
      password:
        name: password
        description: 'The password of the driver.'
        required: true
        example: secret
        type: string
    responses:
      -
        status: 200
        content: |-
          {
               "status": true,
               "message": "You have successfully logged in!",
               "access_token": "13|JQHbQK8QuNHCzwztR30u2ogiBxuZNSBwJhZX8sop",
               "token_type": "Bearer",
               "data": {
                   "id": 1,
                   "name": "John Panda",
                   "email": "panda@gmail.com",
                   "status": 1
               }
           }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
                "status": false,
                "message": "These credentials do not match our records!"
            }
        headers: []
        description: '401'
      -
        status: 403
        content: |-
          {
                "status": false,
                "message": "Your account is not verified. Contact support!"
            }
        headers: []
        description: '403'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/driver/profile-update
    metadata:
      title: 'Profile update Endpoint'
      description: |-
        This endpoint allows you to update profile of user.
        To update profile data you need access_token generated by this authentication endpoints.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'optional Image should be less than 2MB and contains mentioned extensions (jpeg,png,jpg)'
        required: false
        example: voluptatibus
        type: image
      name:
        name: name
        description: 'optional Full name of the driver.'
        required: false
        example: 'John Panda'
        type: string
      phone:
        name: phone
        description: 'optional Valid phone number the driver (International format).'
        required: false
        example: '+91234567890'
        type: string
      address:
        name: address
        description: 'optional Valid full address of the driver.'
        required: false
        example: 'Street 1, Main Block, XYZ'
        type: string
      city:
        name: city
        description: 'optional City name of the driver'
        required: false
        example: rerum
        type: string
      country:
        name: country
        description: 'optional Country name of the driver'
        required: false
        example: magni
        type: string
      gender:
        name: gender
        description: 'optional Gender of the driver'
        required: false
        example: quo
        type: string
    responses:
      -
        status: 200
        content: |-
          {
               "status": true,
               "message": "Your profile has been updated!",
           }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
                "message": "Unauthenticated."
            }
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/driver/store-device-token
    metadata:
      title: 'Device Token Store Endpoint'
      description: 'This endpoint allows you to store device token to send notifications to the drivers.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'The token generated from OneSignal SDK of the driver.'
        required: true
        example: voluptate
        type: string
    responses:
      -
        status: 200
        content: |-
          {
               "status": true,
                 "message": "Device token has been stored!"
           }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
                "message": "Unauthenticated",
           }
           }
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/driver/change-status
    metadata:
      title: 'Driver Status Endpoint'
      description: |-
        This endpoint allows you to online/offline it's availability.
        To do this need authorization token.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $token'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'The status need be 1 when online and 0 when offline.'
        required: true
        example: true
        type: boolean
    responses:
      -
        status: 200
        content: |-
          {
                "status": true,
                "message": "Status has been changed!",
                "current_status": 1
            }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
                 "message": "Unauthenticated."
           }
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/driver/save-location
    metadata:
      title: 'Driver Location Update Endpoint'
      description: |-
        This endpoint allows you to update driver recent location coordinates.
        To do this need authorization token.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $token'
    urlParameters: []
    queryParameters: []
    bodyParameters:
      lat:
        name: lat
        description: 'The latitude of the current location of driver.'
        required: true
        example: 5.693
        type: number
      lng:
        name: lng
        description: 'The longitude of the current location of driver.'
        required: true
        example: 25421750.97
        type: number
    responses:
      -
        status: 200
        content: |-
          {
                "status": true,
                "message": "Driver location has been updated!!"
            }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
                 "message": "Unauthenticated."
           }
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/v1/driver/get-broadcasted-shipments
    metadata:
      title: 'Get Broadcasted shipments Endpoint'
      description: 'This endpoint allows you to fetch all shipments created near driver.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "status": true,
               "message": "Address is created successfully!",
           }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
                "message": "Unauthenticated."
            }
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/driver/driver-shipment-status
    metadata:
      title: 'Accept or Reject shipments Endpoint'
      description: 'This endpoint to accept or reject a broadcasted shipment.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      shipment_id:
        name: shipment_id
        description: 'ID of shipment.'
        required: true
        example: 11
        type: integer
      status:
        name: status
        description: 'The status of the shipment by driver.'
        required: true
        example: architecto
        type: string
    responses:
      -
        status: 200
        content: |-
          {
               "status": true,
               "message": "Address is created successfully!",
           }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
                "message": "Unauthenticated."
            }
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/driver/get-assigned-shipments
    metadata:
      title: 'Get Driver shipments Endpoint'
      description: 'This endpoint allows you to fetch all shipments created near driver.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "status": true,
               "message": "Address is created successfully!",
           }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
                "message": "Unauthenticated."
            }
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/driver/pickup-or-complete
    metadata:
      title: 'Pickup or Deliver shipments Endpoint'
      description: 'This endpoint to accept or reject a broadcasted shipment.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      shipment_id:
        name: shipment_id
        description: 'ID of shipment.'
        required: true
        example: 8
        type: integer
      status:
        name: status
        description: 'The status of the shipment by driver (picked_up, completed).'
        required: true
        example: ut
        type: string
    responses:
      -
        status: 200
        content: |-
          {
               "status": true,
               "message": "Address is created successfully!",
           }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
                "message": "Unauthenticated."
            }
        headers: []
        description: '401'
    responseFields: []
